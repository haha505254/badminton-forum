version: '3.8'

services:
  postgres-staging:
    image: postgres:13
    container_name: badminton-postgres-staging
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-badmintonuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-badmintonforumdb}
    volumes:
      - postgres-staging-data:/var/lib/postgresql/data
    networks:
      - badminton-network-staging
    restart: unless-stopped

  api-staging:
    image: ghcr.io/${GITHUB_REPOSITORY}-api:main
    container_name: badminton-api-staging
    environment:
      ASPNETCORE_ENVIRONMENT: Staging
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: ${CONNECTION_STRING}
      Jwt__SecretKey: ${JWT_SECRET_KEY}
      Jwt__Issuer: ${JWT_ISSUER:-https://staging.badminton-forum.com}
      Jwt__Audience: ${JWT_AUDIENCE:-https://staging.badminton-forum.com}
    ports:
      - "3001:80"
    depends_on:
      - postgres-staging
    networks:
      - badminton-network-staging
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend-staging:
    image: ghcr.io/${GITHUB_REPOSITORY}-frontend:main
    container_name: badminton-frontend-staging
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
    ports:
      - "5174:80"
    depends_on:
      - api-staging
    networks:
      - badminton-network-staging
    restart: unless-stopped

networks:
  badminton-network-staging:
    driver: bridge

volumes:
  postgres-staging-data:
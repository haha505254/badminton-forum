name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-api:
    name: Test API
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./BadmintonForum.API
    
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./BadmintonForum.API
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./BadmintonForum.API
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=testdb;Username=testuser;Password=testpassword"

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: badminton-forum-vue/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./badminton-forum-vue
    
    - name: Run unit tests
      run: npm run test:unit --if-present
      working-directory: ./badminton-forum-vue
    
    - name: Build
      run: npm run build
      working-directory: ./badminton-forum-vue

  # E2E 測試暫時停用 - 在 CI 環境中經常超時
  # 保留程式碼供未來優化參考
  # e2e-tests:
  #   name: E2E Tests
  #   runs-on: ubuntu-latest
  #   needs: [test-api, test-frontend]
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '18'
  #   
  #   - name: Install dependencies
  #     run: npm ci
  #     working-directory: ./badminton-forum-vue
  #   
  #   - name: Install Playwright
  #     run: npx playwright install --with-deps
  #     working-directory: ./badminton-forum-vue
  #   
  #   - name: Start services with Docker Compose
  #     run: docker compose -f docker-compose.ci.yml up -d
  #   
  #   - name: Wait for services
  #     run: |
  #       timeout 60 bash -c 'until curl -f http://localhost:5246/health; do sleep 2; done'
  #       timeout 60 bash -c 'until curl -f http://localhost:5173; do sleep 2; done'
  #   
  #   - name: Run E2E tests
  #     run: npm run test:e2e
  #     working-directory: ./badminton-forum-vue
  #   
  #   - name: Upload test results
  #     uses: actions/upload-artifact@v4
  #     if: failure()
  #     with:
  #       name: playwright-report
  #       path: badminton-forum-vue/playwright-report/
  #       retention-days: 30

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [test-api, test-frontend]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for API
      id: meta-api
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
    
    - name: Build and push API Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./BadmintonForum.API
        push: true
        tags: ${{ steps.meta-api.outputs.tags }}
        labels: ${{ steps.meta-api.outputs.labels }}
    
    - name: Extract metadata for Frontend
      id: meta-frontend
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
    
    - name: Build and push Frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./badminton-forum-vue
        push: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-push]  # 移除 e2e-tests 依賴
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd /opt/badminton-forum
          docker compose -f docker-compose.prod.yml pull
          docker compose -f docker-compose.prod.yml up -d
          docker system prune -f